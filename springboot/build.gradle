plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	// @@@@ implementation @@@@
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// **** Devtools ****
	// * Automatic Restart : classpath 파일이 변경될 때마다 App를 재시작.
	// * LiveReload : 정적파일 수정시 새로고침없이 적용됨.
	// * Property Defaults : Thymeleaf의 성능 향상을 위해 캐싱을 한다.
	//    - (캐시 적용이 제대로 반영이 안될 수 있으니 Cache 상태 설정 가능)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// @@@@ RuntimeOnly @@@@
	// @ Runtime 에만 필요한 라이브러리 설정
	// **** Mysql Connector ****
	runtimeOnly 'mysql:mysql-connector-java'


	// @@@@ CompileOnly @@@@
	// @ Compile 에만 필요한 라이브러리 설정
	compileOnly 'org.projectlombok:lombok'

	// @@@@ AnnotationProcessor @@@@
	// @ 어노테이션에 대한 코드베이스를 검사, 수정, 생성하는 역할
	//   - (기본으로 포함되는 어노테이션이 아니면 추가해주어야한다.)
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// plain Jar 파일 생성 안함.
// plain Jar 파일은 실행에 필요한 의존성을 포함하지 않고 클래스, 리소스파일만 포함한다.
jar {
	enabled = false
}